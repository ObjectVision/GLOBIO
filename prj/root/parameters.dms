container parameters
{
	container input
	{
		// scenario parameters
		parameter<string> ScenarioYear 				    := '1970';
		parameter<string> LanduseCodes         	 	    := '1|10|11|12|30|21|22|40|0';
		parameter<string> LanduseNames			 	    := "Urban|Cropland|Cropland high intensive|Cropland low intensive|Forestry|Pasture|Rangeland|secondary vegetation|undefined";
		
		parameter<string> LandusePriorityCodes   		:= "1|10|30|21|22";
		parameter<uint32> LanduseReplaceWithCode 		:= 40;
		parameter<uint32> LanduseUndefinedCode   		:= 0;
		//parameter<string> CellSize 				    := "10sec";
		//parameter<string> CellSizeStr 				:= "10";
		
		// regions, initial landuse
		parameter<string> Regions          	            := "%GlobioSourceDataDir%/input/ESA_IMAGEregions_10sec_no_water_GLOBIO41cz.tif";
		parameter<string> RegionsMetainfo				:= "%GlobioSourceDataDir%/input/Regions.csv";
		parameter<string> Landuse		   	     		:= "%GlobioSourceDataDir%/input/ESACCI_GLOBIO_1992_water1992-2015.tif";
		
		// restrictions
		parameter<string> NotAllocatableAreas    		:= "%GlobioSourceDataDir%/input/not_allocatable_ESA-CCI_1992-2015.tif";
		parameter<string> PAReduceFactor         		:= "%GlobioSourceDataDir%/input/pa_reduce_factor_wdpa_2018_july.tif"; // for example protected areas
		
		// suitabilities
		parameter<string> SuitRasterCodes 		        := "1|10|21|22|30";
		parameter<string> SuitRasterNames        		:= "%GlobioSourceDataDir%/input/suit_urban.tif|%GlobioSourceDataDir%/input/suit_crop_lu_diff_no_wtr_ice_0.tif|%GlobioSourceDataDir%/input/suit_pasture_lu_diff_no_wtr.tif|%GlobioSourceDataDir%/input/suit_pasture_lu_diff_no_wtr.tif|%GlobioSourceDataDir%/input/suit_forestry_2015.tif";
		parameter<string> ScenSuitRasterWeights  		:= "0.0|0.0|0.0|0.0|0.0";

		// claims
		parameter<string> ClaimFileName 		 		:= "%GlobioSourceDataDir%/input/Claim1970.csv";
		parameter<string> ClaimRegionFieldName 	 	    := "Region";
		parameter<string> ClaimLanduseFieldName  		:= "Attribute";
		parameter<string> ClaimAreaFieldName 	 		:= "Value";
		parameter<string> CellAreas                     := "%GlobioSourceDataDir%/input/areakm2_10sec.tif";
		
		  
		// cropland intensity adjustment
		parameter<string> LandUseCodeCrops 		 	    := "10";
		parameter<string> LandUseCodeCropsHighIntensive := "11";
		parameter<string> LandUseCodeCropsLowIntensive  := "12";
		
		// output filenames
		parameter<string> OutAllocatedLanduse  			:= "$OutDir;\Globio4_landuse_$CellSizeStr;sec_$ScenarioYear;_$ExtentStr;.tif";
		parameter<string> OutAllocatedLanduseCropInt 	:= "$OutDir;\Globio4_landuse_$CellSizeStr;sec_$ScenarioYear;_$ExtentStr;_crop_int.tif";
		parameter<string> OutRegionLanduseAreasFileName := "$OutDir;\regio_landuse_areas_$CellSizeStr;sec_$ScenarioName;_$ScenarioYear;_$ExtentStr;.csv";
	}
	
	container final
	{
		// scenario parameters
		parameter<string> ScenarioYear 				                       :=  parameters/input/ScenarioYear;
		attribute<uint32> LanduseCodes (intermediate/lu_full_domain) 		   := intermediate/lu_full_domain/code;
		attribute<string> LanduseNames (intermediate/lu_full_domain) 		   := intermediate/lu_full_domain/name;
		attribute<uint32> LandusePriorityCodes (intermediate/lu_prio_domain) := intermediate/lu_prio_domain/code;
		attribute<string> LandusePriorityNames (intermediate/lu_prio_domain) := intermediate/lu_prio_domain/name;
		parameter<uint32> LanduseReplaceWithCode 		                       := parameters/input/LanduseReplaceWithCode;
		parameter<uint32> LanduseUndefinedCode   							   := parameters/input/LanduseUndefinedCode;
		
		// regions, initial landuse
		parameter<string> Regions          	            				   := parameters/input/Regions;
		parameter<string> RegionsMetainfo							       := parameters/input/RegionsMetainfo;
		parameter<string> Landuse		   	     							   := parameters/input/Landuse;
		
		// restrictions
		parameter<string> NotAllocatableAreas    		:= parameters/input/NotAllocatableAreas;
		parameter<string> PAReduceFactor         		:= parameters/input/PAReduceFactor;
		
		// suitabilities
		attribute<uint32> SuitRasterCodes       (intermediate/suitabilities_domain)  := intermediate/suitabilities_domain/code;
		attribute<string> SuitRasterNames 	  (intermediate/suitabilities_domain)  := intermediate/suitabilities_domain/filename;
		attribute<string> SuitRasterName (intermediate/suitabilities_domain) := intermediate/suitabilities_domain/name; 
		attribute<float32> ScenSuitRasterWeights (intermediate/suitabilities_domain) := intermediate/suitabilities_domain/weights;

		
		// claims
		parameter<string> ClaimFileName 		:= parameters/input/ClaimFileName;
		parameter<string> ClaimRegionFieldName  := parameters/input/ClaimRegionFieldName;
		parameter<string> ClaimLanduseFieldName := parameters/input/ClaimLanduseFieldName;
		parameter<string> ClaimAreaFieldName 	:= parameters/input/ClaimAreaFieldName;
		parameter<string> CellAreas             := parameters/input/CellAreas;
		
		// cropland intensity adjustment
		parameter<LandUseType> LandUseCodeCrops 		 := parameters/input/LandUseCodeCrops[LandUseType];
		parameter<LandUseType> LandUseCodeCropsHighIntensive := parameters/input/LandUseCodeCropsHighIntensive[LandUseType];
		parameter<LandUseType> LandUseCodeCropsLowIntensive  := parameters/input/LandUseCodeCropsLowIntensive[LandUseType];
		
		// output filenames
		parameter<string> OutAllocatedLanduse  		  	  := parameters/input/OutAllocatedLanduse;
		parameter<string> OutAllocatedLanduseCropInt 	  := parameters/input/OutAllocatedLanduseCropInt;
		//parameter<string> OutRegionLanduseAreasFileName := "$OutDir;\regio_landuse_areas_$CellSizeStr;sec_$ScenarioName;_$ScenarioYear;_$ExtentStr;.csv";
		
		container intermediate
		{
			unit<uint8> lu_full_domain := cat_range(uint8, 0b, uint8(strcount(parameters/input/LanduseCodes, '|')+1))
			{
				attribute<uint32> code := uint32(readlines(replace(parameters/input/LanduseCodes, '|', '\n'), ., 0));
				attribute<string> name := readlines(replace(parameters/input/LanduseNames, '|', '\n'), ., 0);
			}
			
			unit<uint8> lu_prio_domain := cat_range(uint8, 0b, uint8(strcount(parameters/input/LandusePriorityCodes, '|')+1))
			{
				attribute<uint32> code := uint32(readlines(replace(parameters/input/LandusePriorityCodes, '|', '\n'), ., 0));
				attribute<intermediate/lu_full_domain> lu_full_rel := rlookup(code, intermediate/lu_full_domain/code);
				attribute<string> name := intermediate/lu_full_domain/name[lu_full_rel];
			}
			
			unit<uint8> suitabilities_domain := cat_range(uint8, 0b, uint8(strcount(parameters/input/SuitRasterCodes, '|')+1))
			{
				attribute<uint32>  code     := uint32(readlines(replace(parameters/input/SuitRasterCodes, '|', '\n'), ., 0));
				attribute<intermediate/lu_full_domain> lu_full_rel := rlookup(code, intermediate/lu_full_domain/code);
				attribute<string> name := intermediate/lu_full_domain/name[lu_full_rel];
				
				attribute<string>  filename := readlines(replace(parameters/input/SuitRasterNames, '|', '\n'), ., 0);
				attribute<float32> weights  := float32(readlines(replace(parameters/input/ScenSuitRasterWeights, '|', '\n'), ., 0));
			}
		}
	}
}